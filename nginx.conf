events {
  worker_connections 1024;
}

http {
  upstream nodeapp {
    server node:3000;
  }

  upstream ocpuapp {
    server ocpu:8004;
  }

  server {
    listen 80;

    # Redirect requests to the node service
    location / {
      proxy_pass http://nodeapp;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirect requests to the ocpu service
    location /opencpu/ {
      proxy_pass http://ocpuapp/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ocpu/ {
      proxy_pass http://ocpuapp/ocpu/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files
    location /static/ {
      alias /path/to/static/files/;
    }

    # SSL termination example (assuming you have certificate files)
    # listen 443 ssl;
    # ssl_certificate /path/to/certificate.crt;
    # ssl_certificate_key /path/to/private.key;

    # Caching example
    # location ~* \.(jpg|jpeg|png|gif|ico|css|js|csv|json)$ {
    #   expires 30d;
    #   add_header Cache-Control "public, no-transform";
    # }
  }

  client_max_body_size 200M;  # Adjust to your required size limit (e.g., 20MB)

}
