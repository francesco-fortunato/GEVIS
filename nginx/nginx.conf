events {
  worker_connections 1024;
}

http {
    upstream nodeapp {
        server node:3000;
    }

    upstream ocpuapp {
        server ocpu:8004;  
    }

    # Define cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=node_cache:10m inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 10m;  # Cache valid responses (200, 302) for 10 minutes
    proxy_cache_valid 404 1m;       # Cache 404 responses for 1 minute
    proxy_cache_use_stale error timeout invalid_header updating;

  server {
    listen 11765;

    # Redirect requests to the node service
    location / {
      proxy_pass http://nodeapp;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Enable caching for dynamic content served by the Node app
      proxy_cache node_cache;
      proxy_cache_bypass $http_cache_control;  # Don't cache if Cache-Control: no-cache is present
    }

    location /ocpu {
      proxy_pass http://ocpuapp/ocpu;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Handle redirects from OpenCPU
      proxy_redirect ocpu:8004/ocpu/ http://$host:11765/ocpu/;
      proxy_redirect ocpu:8004/ http://$host:11765/;

      # Add CORS headers
      add_header 'Access-Control-Allow-Origin' '*';  # Allow your Nginx origin
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';      # Allow specific methods
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';  # Allow specific headers

      # Handle preflight requests
      if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
          add_header 'Content-Length' 0;
          return 204;
      }

      # Enable caching for OpenCPU dynamic content
      proxy_cache node_cache;
      proxy_cache_bypass $http_cache_control;
      
    }

    location /rstudio {
      proxy_pass http://ocpuapp/rstudio;
      proxy_set_header Host $host:$server_port;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Handle redirects from OpenCPU
      proxy_redirect ocpu:8004/rstudio/ http://$host:11765/rstudio/;
      proxy_redirect ocpu:8004/ http://$host:11765/;

      # Add CORS headers
      add_header 'Access-Control-Allow-Origin' '*';  # Allow your Nginx origin
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';      # Allow specific methods
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';  # Allow specific headers

      # Handle preflight requests
      if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
          add_header 'Content-Length' 0;
          return 204;
      }
    }

    # Serve static files
    location /static/ {
      alias /path/to/static/files/;
    }

    # SSL termination example (assuming you have certificate files)
    # listen 443 ssl;
    # ssl_certificate /path/to/certificate.crt;
    # ssl_certificate_key /path/to/private.key;

    # Caching example
    # location ~* \.(jpg|jpeg|png|gif|ico|css|js|csv|json)$ {
    #   expires 30d;
    #   add_header Cache-Control "public, no-transform";
    # }
  }

  client_max_body_size 200M;  # Adjust to your required size limit (e.g., 20MB)
  error_log /var/log/nginx/error.log debug;

}
